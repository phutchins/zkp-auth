use std::env;
use std::str::FromStr;
use num_bigint::{BigInt};

static LARGE_PRIME: &str = "323170060713110073003389139264238282488179412411402391128420\
097514007417066343542226196894173635693471179017379097041917546058732091950288537589861856221532\
121754125149017745202702357960782362488842461894775876411059286460994117232454266225221932305409\
190376805242355191256797158701170010580558776510388618472802579760549035697325615261670813393617\
995413364765591603683178967290731783845896806396719009772021941686472258710314113364293195361934\
716365332097170774482279885885653692086452966360772502689555059283627511211740969729980684105543\
59584866583291642136218231078990999448652468262416972035911852507045361090559";

pub static SERVER_ADDR: &'static str = "http://0.0.0.0:8080";

pub fn get_server_addr() -> &'static str {
  match env::var("SERVER_ADDR") {
    Ok(val) => val.as_str(),
    Err(_) => SERVER_ADDR
  };
  SERVER_ADDR
}

pub fn public() -> (BigInt, BigInt, i32, i32) {
  (
    BigInt::from_str(LARGE_PRIME).unwrap(),
    (BigInt::from_str(LARGE_PRIME).unwrap() - 1) / 2,
    2,
    4
  )
}